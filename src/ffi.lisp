;;; This file was automatically generated by SWIG (http://www.swig.org).
;;; Version 3.0.12
;;;
;;; Do not make changes to this file unless you know what you are doing--modify
;;; the SWIG interface file instead.

(in-package :lsquic)



(cl:defconstant #.(lispify "MAX_CID_LEN" 'constant) 20)

(cl:defconstant #.(lispify "GQUIC_CID_LEN" 'constant) 8)

(cffi:defcstruct #.(lispify "lsquic_cid_t" 'classname)
	(#.(lispify "len" 'slotname) :pointer)
	(#.(lispify "u_cid" 'slotname) :pointer))

(cffi:defcunion #.(lispify "lsquic_cid_u_cid" 'classname)
	(#.(lispify "buf" 'slotname) :pointer :count 20)
	(#.(lispify "id" 'slotname) :pointer))

(cl:defconstant #.(lispify "LSQUIC_MAJOR_VERSION" 'constant) 2)

(cl:defconstant #.(lispify "LSQUIC_MINOR_VERSION" 'constant) 19)

(cl:defconstant #.(lispify "LSQUIC_PATCH_VERSION" 'constant) 8)

(cl:defconstant #.(lispify "LSENG_SERVER" 'constant) (cl:ash 1 0))

(cl:defconstant #.(lispify "LSENG_HTTP" 'constant) (cl:ash 1 1))

(cl:defconstant #.(lispify "LSENG_HTTP_SERVER" 'constant) (cl:logior (cl:ash 1 0) (cl:ash 1 1)))

(cffi:defcenum #.(lispify "lsquic_version" 'enumname)
	#.(lispify "LSQVER_043" 'enumvalue :keyword)
	#.(lispify "LSQVER_046" 'enumvalue :keyword)
	#.(lispify "LSQVER_050" 'enumvalue :keyword)
	#.(lispify "LSQVER_ID27" 'enumvalue :keyword)
	#.(lispify "LSQVER_ID28" 'enumvalue :keyword)
	#.(lispify "LSQVER_ID29" 'enumvalue :keyword)
	#.(lispify "LSQVER_VERNEG" 'enumvalue :keyword)
	#.(lispify "N_LSQVER" 'enumvalue :keyword))

(cl:defconstant #.(lispify "LSQUIC_DEPRECATED_VERSIONS" 'constant) 0)

(cffi:defcenum #.(lispify "lsquic_hsk_status" 'enumname)
	#.(lispify "LSQ_HSK_FAIL" 'enumvalue :keyword)
	#.(lispify "LSQ_HSK_OK" 'enumvalue :keyword)
	#.(lispify "LSQ_HSK_RESUMED_OK" 'enumvalue :keyword)
	#.(lispify "LSQ_HSK_RESUMED_FAIL" 'enumvalue :keyword))

(cffi:defcstruct #.(lispify "lsquic_stream_if" 'classname)
	(#.(lispify "on_new_conn" 'slotname) :pointer)
	(#.(lispify "on_goaway_received" 'slotname) :pointer)
	(#.(lispify "on_conn_closed" 'slotname) :pointer)
	(#.(lispify "on_new_stream" 'slotname) :pointer)
	(#.(lispify "on_read" 'slotname) :pointer)
	(#.(lispify "on_write" 'slotname) :pointer)
	(#.(lispify "on_close" 'slotname) :pointer)
	(#.(lispify "on_hsk_done" 'slotname) :pointer)
	(#.(lispify "on_new_token" 'slotname) :pointer)
	(#.(lispify "on_sess_resume_info" 'slotname) :pointer))

(cl:defconstant #.(lispify "LSQUIC_MIN_FCW" 'constant) (cl:* 16 1024))

(cl:defconstant #.(lispify "LSQUIC_DF_CFCW_SERVER" 'constant) (cl:* 3 1024 (cl:/ 1024 2)))

(cl:defconstant #.(lispify "LSQUIC_DF_CFCW_CLIENT" 'constant) (cl:* 15 1024 1024))

(cl:defconstant #.(lispify "LSQUIC_DF_SFCW_SERVER" 'constant) (cl:* 1 1024 1024))

(cl:defconstant #.(lispify "LSQUIC_DF_SFCW_CLIENT" 'constant) (cl:* 6 1024 1024))

(cl:defconstant #.(lispify "LSQUIC_DF_MAX_STREAMS_IN" 'constant) 100)

(cl:defconstant #.(lispify "LSQUIC_DF_INIT_MAX_DATA_SERVER" 'constant) (cl:* 3 1024 (cl:/ 1024 2)))

(cl:defconstant #.(lispify "LSQUIC_DF_INIT_MAX_DATA_CLIENT" 'constant) (cl:* 15 1024 1024))

(cl:defconstant #.(lispify "LSQUIC_DF_INIT_MAX_STREAM_DATA_BIDI_REMOTE_SERVER" 'constant) (cl:* 1 1024 1024))

(cl:defconstant #.(lispify "LSQUIC_DF_INIT_MAX_STREAM_DATA_BIDI_LOCAL_SERVER" 'constant) 0)

(cl:defconstant #.(lispify "LSQUIC_DF_INIT_MAX_STREAM_DATA_BIDI_REMOTE_CLIENT" 'constant) 0)

(cl:defconstant #.(lispify "LSQUIC_DF_INIT_MAX_STREAM_DATA_BIDI_LOCAL_CLIENT" 'constant) (cl:* 6 1024 1024))

(cl:defconstant #.(lispify "LSQUIC_DF_INIT_MAX_STREAMS_BIDI" 'constant) 100)

(cl:defconstant #.(lispify "LSQUIC_DF_INIT_MAX_STREAMS_UNI_CLIENT" 'constant) 100)

(cl:defconstant #.(lispify "LSQUIC_DF_INIT_MAX_STREAMS_UNI_SERVER" 'constant) 3)

(cl:defconstant #.(lispify "LSQUIC_DF_INIT_MAX_STREAM_DATA_UNI_CLIENT" 'constant) (cl:* 32 1024))

(cl:defconstant #.(lispify "LSQUIC_DF_INIT_MAX_STREAM_DATA_UNI_SERVER" 'constant) (cl:* 12 1024))

(cl:defconstant #.(lispify "LSQUIC_DF_IDLE_TIMEOUT" 'constant) 30)

(cl:defconstant #.(lispify "LSQUIC_DF_PING_PERIOD" 'constant) 15)

(cl:defconstant #.(lispify "LSQUIC_DF_HANDSHAKE_TO" 'constant) (cl:* 10 1000 1000))

(cl:defconstant #.(lispify "LSQUIC_DF_IDLE_CONN_TO" 'constant) (cl:* 30 1000 1000))

(cl:defconstant #.(lispify "LSQUIC_DF_SILENT_CLOSE" 'constant) 1)

(cl:defconstant #.(lispify "LSQUIC_DF_MAX_HEADER_LIST_SIZE" 'constant) 0)

(cl:defconstant #.(lispify "LSQUIC_DF_STTL" 'constant) 86400)

(cl:defconstant #.(lispify "LSQUIC_DF_MAX_INCHOATE" 'constant) (cl:* 1 1000 1000))

(cl:defconstant #.(lispify "LSQUIC_DF_SUPPORT_NSTP" 'constant) 0)

(cl:defconstant #.(lispify "LSQUIC_DF_SUPPORT_PUSH" 'constant) 1)

(cl:defconstant #.(lispify "LSQUIC_DF_SUPPORT_TCID0" 'constant) 1)

(cl:defconstant #.(lispify "LSQUIC_DF_HONOR_PRST" 'constant) 0)

(cl:defconstant #.(lispify "LSQUIC_DF_SEND_PRST" 'constant) 0)

(cl:defconstant #.(lispify "LSQUIC_DF_PROGRESS_CHECK" 'constant) 1000)

(cl:defconstant #.(lispify "LSQUIC_DF_RW_ONCE" 'constant) 0)

(cl:defconstant #.(lispify "LSQUIC_DF_PROC_TIME_THRESH" 'constant) 0)

(cl:defconstant #.(lispify "LSQUIC_DF_PACE_PACKETS" 'constant) 1)

(cl:defconstant #.(lispify "LSQUIC_DF_CLOCK_GRANULARITY" 'constant) 1000)

(cl:defconstant #.(lispify "LSQUIC_DF_SCID_LEN" 'constant) 8)

(cl:defconstant #.(lispify "LSQUIC_DF_SCID_ISS_RATE" 'constant) 60)

(cl:defconstant #.(lispify "LSQUIC_DF_QPACK_DEC_MAX_BLOCKED" 'constant) 100)

(cl:defconstant #.(lispify "LSQUIC_DF_QPACK_DEC_MAX_SIZE" 'constant) 4096)

(cl:defconstant #.(lispify "LSQUIC_DF_QPACK_ENC_MAX_BLOCKED" 'constant) 100)

(cl:defconstant #.(lispify "LSQUIC_DF_QPACK_ENC_MAX_SIZE" 'constant) 4096)

(cl:defconstant #.(lispify "LSQUIC_DF_ECN" 'constant) 0)

(cl:defconstant #.(lispify "LSQUIC_DF_ALLOW_MIGRATION" 'constant) 1)

(cl:defconstant #.(lispify "LSQUIC_DF_QL_BITS" 'constant) 2)

(cl:defconstant #.(lispify "LSQUIC_DF_SPIN" 'constant) 1)

(cl:defconstant #.(lispify "LSQUIC_DF_DELAYED_ACKS" 'constant) 0)

(cl:defconstant #.(lispify "LSQUIC_DF_TIMESTAMPS" 'constant) 1)

(cl:defconstant #.(lispify "LSQUIC_DF_CC_ALGO" 'constant) 1)

(cl:defconstant #.(lispify "LSQUIC_DF_MAX_UDP_PAYLOAD_SIZE_RX" 'constant) 0)

(cl:defconstant #.(lispify "LSQUIC_DF_GREASE_QUIC_BIT" 'constant) 1)

(cl:defconstant #.(lispify "LSQUIC_DF_DPLPMTUD" 'constant) 1)

(cl:defconstant #.(lispify "LSQUIC_DF_BASE_PLPMTU" 'constant) 0)

(cl:defconstant #.(lispify "LSQUIC_DF_MAX_PLPMTU" 'constant) 0)

(cl:defconstant #.(lispify "LSQUIC_DF_NOPROGRESS_TIMEOUT_SERVER" 'constant) 60)

(cl:defconstant #.(lispify "LSQUIC_DF_NOPROGRESS_TIMEOUT_CLIENT" 'constant) 0)

(cl:defconstant #.(lispify "LSQUIC_DF_MTU_PROBE_TIMER" 'constant) 1000)

(cffi:defcstruct #.(lispify "lsquic_engine_settings" 'classname)
	(#.(lispify "es_versions" 'slotname) :unsigned-int)
	(#.(lispify "es_cfcw" 'slotname) :unsigned-int)
	(#.(lispify "es_sfcw" 'slotname) :unsigned-int)
	(#.(lispify "es_max_cfcw" 'slotname) :unsigned-int)
	(#.(lispify "es_max_sfcw" 'slotname) :unsigned-int)
	(#.(lispify "es_max_streams_in" 'slotname) :unsigned-int)
	(#.(lispify "es_handshake_to" 'slotname) :unsigned-long)
	(#.(lispify "es_idle_conn_to" 'slotname) :unsigned-long)
	(#.(lispify "es_silent_close" 'slotname) :int)
	(#.(lispify "es_max_header_list_size" 'slotname) :unsigned-int)
	(#.(lispify "es_ua" 'slotname) :string)
	(#.(lispify "es_sttl" 'slotname) :pointer)
	(#.(lispify "es_pdmd" 'slotname) :pointer)
	(#.(lispify "es_aead" 'slotname) :pointer)
	(#.(lispify "es_kexs" 'slotname) :pointer)
	(#.(lispify "es_max_inchoate" 'slotname) :unsigned-int)
	(#.(lispify "es_support_push" 'slotname) :int)
	(#.(lispify "es_support_tcid0" 'slotname) :int)
	(#.(lispify "es_support_nstp" 'slotname) :int)
	(#.(lispify "es_honor_prst" 'slotname) :int)
	(#.(lispify "es_send_prst" 'slotname) :int)
	(#.(lispify "es_progress_check" 'slotname) :unsigned-int)
	(#.(lispify "es_rw_once" 'slotname) :int)
	(#.(lispify "es_proc_time_thresh" 'slotname) :unsigned-int)
	(#.(lispify "es_pace_packets" 'slotname) :int)
	(#.(lispify "es_clock_granularity" 'slotname) :unsigned-int)
	(#.(lispify "es_cc_algo" 'slotname) :unsigned-int)
	(#.(lispify "es_noprogress_timeout" 'slotname) :unsigned-int)
	(#.(lispify "es_init_max_data" 'slotname) :unsigned-int)
	(#.(lispify "es_init_max_stream_data_bidi_remote" 'slotname) :unsigned-int)
	(#.(lispify "es_init_max_stream_data_bidi_local" 'slotname) :unsigned-int)
	(#.(lispify "es_init_max_stream_data_uni" 'slotname) :unsigned-int)
	(#.(lispify "es_init_max_streams_bidi" 'slotname) :unsigned-int)
	(#.(lispify "es_init_max_streams_uni" 'slotname) :unsigned-int)
	(#.(lispify "es_idle_timeout" 'slotname) :unsigned-int)
	(#.(lispify "es_ping_period" 'slotname) :unsigned-int)
	(#.(lispify "es_scid_len" 'slotname) :unsigned-int)
	(#.(lispify "es_scid_iss_rate" 'slotname) :unsigned-int)
	(#.(lispify "es_qpack_dec_max_size" 'slotname) :unsigned-int)
	(#.(lispify "es_qpack_dec_max_blocked" 'slotname) :unsigned-int)
	(#.(lispify "es_qpack_enc_max_size" 'slotname) :unsigned-int)
	(#.(lispify "es_qpack_enc_max_blocked" 'slotname) :unsigned-int)
	(#.(lispify "es_ecn" 'slotname) :int)
	(#.(lispify "es_allow_migration" 'slotname) :int)
	(#.(lispify "es_ql_bits" 'slotname) :int)
	(#.(lispify "es_spin" 'slotname) :int)
	(#.(lispify "es_delayed_acks" 'slotname) :int)
	(#.(lispify "es_timestamps" 'slotname) :int)
	(#.(lispify "es_max_udp_payload_size_rx" 'slotname) :unsigned-short)
	(#.(lispify "es_grease_quic_bit" 'slotname) :int)
	(#.(lispify "es_dplpmtud" 'slotname) :int)
	(#.(lispify "es_base_plpmtu" 'slotname) :unsigned-short)
	(#.(lispify "es_max_plpmtu" 'slotname) :unsigned-short)
	(#.(lispify "es_mtu_probe_timer" 'slotname) :unsigned-int))

(cffi:defcfun ("lsquic_engine_init_settings" #.(lispify "lsquic_engine_init_settings" 'function)) :void
  (arg0 :pointer)
  (lsquic_engine_flags :unsigned-int))

(cffi:defcfun ("lsquic_engine_check_settings" #.(lispify "lsquic_engine_check_settings" 'function)) :int
  (settings :pointer)
  (lsquic_engine_flags :unsigned-int)
  (err_buf :string)
  (err_buf_sz :pointer))

(cffi:defcstruct #.(lispify "lsquic_out_spec" 'classname)
	(#.(lispify "iov" 'slotname) :pointer)
	(#.(lispify "iovlen" 'slotname) :pointer)
	(#.(lispify "local_sa" 'slotname) :pointer)
	(#.(lispify "dest_sa" 'slotname) :pointer)
	(#.(lispify "peer_ctx" 'slotname) :pointer)
	(#.(lispify "ecn" 'slotname) :int))

(cffi:defcstruct #.(lispify "lsquic_shared_hash_if" 'classname)
	(#.(lispify "shi_insert" 'slotname) :pointer)
	(#.(lispify "shi_delete" 'slotname) :pointer)
	(#.(lispify "shi_lookup" 'slotname) :pointer))

(cffi:defcstruct #.(lispify "lsquic_packout_mem_if" 'classname)
	(#.(lispify "pmi_allocate" 'slotname) :pointer)
	(#.(lispify "pmi_release" 'slotname) :pointer)
	(#.(lispify "pmi_return" 'slotname) :pointer))

(cffi:defcenum #.(lispify "lsquic_hsi_flag" 'enumname)
	(#.(lispify "LSQUIC_HSI_HTTP1X" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(lispify "LSQUIC_HSI_HASH_NAME" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(lispify "LSQUIC_HSI_HASH_NAMEVAL" 'enumvalue :keyword) #.(cl:ash 1 3)))

(cffi:defcstruct #.(lispify "lsquic_hset_if" 'classname)
	(#.(lispify "hsi_create_header_set" 'slotname) :pointer)
	(#.(lispify "hsi_prepare_decode" 'slotname) :pointer)
	(#.(lispify "hsi_process_header" 'slotname) :pointer)
	(#.(lispify "hsi_discard_header_set" 'slotname) :pointer)
	(#.(lispify "hsi_flags" 'slotname) #.(lispify "lsquic_hsi_flag" 'enumname)))

(cffi:defcstruct #.(lispify "lsquic_keylog_if" 'classname)
	(#.(lispify "kli_open" 'slotname) :pointer)
	(#.(lispify "kli_log_line" 'slotname) :pointer)
	(#.(lispify "kli_close" 'slotname) :pointer))

(cffi:defcstruct #.(lispify "lsquic_engine_api" 'classname)
	(#.(lispify "ea_settings" 'slotname) :pointer)
	(#.(lispify "ea_stream_if" 'slotname) :pointer)
	(#.(lispify "ea_stream_if_ctx" 'slotname) :pointer)
	(#.(lispify "ea_packets_out" 'slotname) :pointer)
	(#.(lispify "ea_packets_out_ctx" 'slotname) :pointer)
	(#.(lispify "ea_lookup_cert" 'slotname) :pointer)
	(#.(lispify "ea_cert_lu_ctx" 'slotname) :pointer)
	(#.(lispify "ea_get_ssl_ctx" 'slotname) :pointer)
	(#.(lispify "ea_shi" 'slotname) :pointer)
	(#.(lispify "ea_shi_ctx" 'slotname) :pointer)
	(#.(lispify "ea_pmi" 'slotname) :pointer)
	(#.(lispify "ea_pmi_ctx" 'slotname) :pointer)
	(#.(lispify "ea_new_scids" 'slotname) :pointer)
	(#.(lispify "ea_live_scids" 'slotname) :pointer)
	(#.(lispify "ea_old_scids" 'slotname) :pointer)
	(#.(lispify "ea_cids_update_ctx" 'slotname) :pointer)
	(#.(lispify "ea_verify_cert" 'slotname) :pointer)
	(#.(lispify "ea_verify_ctx" 'slotname) :pointer)
	(#.(lispify "ea_hsi_if" 'slotname) :pointer)
	(#.(lispify "ea_hsi_ctx" 'slotname) :pointer)
	(#.(lispify "ea_keylog_if" 'slotname) :pointer)
	(#.(lispify "ea_keylog_ctx" 'slotname) :pointer)
	(#.(lispify "ea_alpn" 'slotname) :string))

(cffi:defcfun ("lsquic_engine_new" #.(lispify "lsquic_engine_new" 'function)) :pointer
  (lsquic_engine_flags :unsigned-int)
  (api :pointer))

(cffi:defcfun ("lsquic_engine_connect" #.(lispify "lsquic_engine_connect" 'function)) :pointer
  (arg0 :pointer)
  (arg1 #.(lispify "lsquic_version" 'enumname))
  (local_sa :pointer)
  (peer_sa :pointer)
  (peer_ctx :pointer)
  (conn_ctx :pointer)
  (hostname :string)
  (base_plpmtu :unsigned-short)
  (sess_resume :pointer)
  (sess_resume_len :pointer)
  (token :pointer)
  (token_sz :pointer))

(cffi:defcfun ("lsquic_engine_packet_in" #.(lispify "lsquic_engine_packet_in" 'function)) :int
  (arg0 :pointer)
  (packet_in_data :pointer)
  (packet_in_size :pointer)
  (sa_local :pointer)
  (sa_peer :pointer)
  (peer_ctx :pointer)
  (ecn :int))

(cffi:defcfun ("lsquic_engine_process_conns" #.(lispify "lsquic_engine_process_conns" 'function)) :void
  (engine :pointer))

(cffi:defcfun ("lsquic_engine_has_unsent_packets" #.(lispify "lsquic_engine_has_unsent_packets" 'function)) :int
  (engine :pointer))

(cffi:defcfun ("lsquic_engine_send_unsent_packets" #.(lispify "lsquic_engine_send_unsent_packets" 'function)) :void
  (engine :pointer))

(cffi:defcfun ("lsquic_engine_destroy" #.(lispify "lsquic_engine_destroy" 'function)) :void
  (arg0 :pointer))

(cffi:defcfun ("lsquic_conn_n_avail_streams" #.(lispify "lsquic_conn_n_avail_streams" 'function)) :unsigned-int
  (arg0 :pointer))

(cffi:defcfun ("lsquic_conn_make_stream" #.(lispify "lsquic_conn_make_stream" 'function)) :void
  (arg0 :pointer))

(cffi:defcfun ("lsquic_conn_n_pending_streams" #.(lispify "lsquic_conn_n_pending_streams" 'function)) :unsigned-int
  (arg0 :pointer))

(cffi:defcfun ("lsquic_conn_cancel_pending_streams" #.(lispify "lsquic_conn_cancel_pending_streams" 'function)) :unsigned-int
  (arg0 :pointer)
  (n :unsigned-int))

(cffi:defcfun ("lsquic_conn_going_away" #.(lispify "lsquic_conn_going_away" 'function)) :void
  (arg0 :pointer))

(cffi:defcfun ("lsquic_conn_close" #.(lispify "lsquic_conn_close" 'function)) :void
  (arg0 :pointer))

(cffi:defcfun ("lsquic_stream_wantread" #.(lispify "lsquic_stream_wantread" 'function)) :int
  (s :pointer)
  (is_want :int))

(cffi:defcfun ("lsquic_stream_read" #.(lispify "lsquic_stream_read" 'function)) :pointer
  (s :pointer)
  (buf :pointer)
  (len :pointer))

(cffi:defcfun ("lsquic_stream_readv" #.(lispify "lsquic_stream_readv" 'function)) :pointer
  (s :pointer)
  (vec :pointer)
  (iovcnt :int))

(cffi:defcfun ("lsquic_stream_readf" #.(lispify "lsquic_stream_readf" 'function)) :pointer
  (s :pointer)
  (readf :pointer)
  (ctx :pointer))

(cffi:defcfun ("lsquic_stream_wantwrite" #.(lispify "lsquic_stream_wantwrite" 'function)) :int
  (s :pointer)
  (is_want :int))

(cffi:defcfun ("lsquic_stream_write" #.(lispify "lsquic_stream_write" 'function)) :pointer
  (s :pointer)
  (buf :pointer)
  (len :pointer))

(cffi:defcfun ("lsquic_stream_writev" #.(lispify "lsquic_stream_writev" 'function)) :pointer
  (s :pointer)
  (vec :pointer)
  (count :int))

(cffi:defcstruct #.(lispify "lsquic_reader" 'classname)
	(#.(lispify "lsqr_read" 'slotname) :pointer)
	(#.(lispify "lsqr_size" 'slotname) :pointer)
	(#.(lispify "lsqr_ctx" 'slotname) :pointer))

(cffi:defcfun ("lsquic_stream_writef" #.(lispify "lsquic_stream_writef" 'function)) :pointer
  (arg0 :pointer)
  (arg1 :pointer))

(cffi:defcfun ("lsquic_stream_flush" #.(lispify "lsquic_stream_flush" 'function)) :int
  (s :pointer))

(cffi:defcstruct #.(lispify "lsquic_http_headers" 'classname)
	(#.(lispify "count" 'slotname) :int)
	(#.(lispify "headers" 'slotname) :pointer))

(cffi:defcfun ("lsquic_stream_send_headers" #.(lispify "lsquic_stream_send_headers" 'function)) :int
  (s :pointer)
  (headers :pointer)
  (eos :int))

(cffi:defcfun ("lsquic_stream_get_hset" #.(lispify "lsquic_stream_get_hset" 'function)) :pointer
  (arg0 :pointer))

(cffi:defcfun ("lsquic_conn_push_stream" #.(lispify "lsquic_conn_push_stream" 'function)) :int
  (c :pointer)
  (hdr_set :pointer)
  (s :pointer)
  (headers :pointer))

(cffi:defcfun ("lsquic_conn_is_push_enabled" #.(lispify "lsquic_conn_is_push_enabled" 'function)) :int
  (arg0 :pointer))

(cffi:defcfun ("lsquic_stream_shutdown" #.(lispify "lsquic_stream_shutdown" 'function)) :int
  (s :pointer)
  (how :int))

(cffi:defcfun ("lsquic_stream_close" #.(lispify "lsquic_stream_close" 'function)) :int
  (s :pointer))

(cffi:defcfun ("lsquic_conn_get_server_cert_chain" #.(lispify "lsquic_conn_get_server_cert_chain" 'function)) :pointer
  (arg0 :pointer))

(cffi:defcfun ("lsquic_stream_id" #.(lispify "lsquic_stream_id" 'function)) :pointer
  (s :pointer))

(cffi:defcfun ("lsquic_stream_get_ctx" #.(lispify "lsquic_stream_get_ctx" 'function)) :pointer
  (s :pointer))

(cffi:defcfun ("lsquic_stream_is_pushed" #.(lispify "lsquic_stream_is_pushed" 'function)) :int
  (s :pointer))

(cffi:defcfun ("lsquic_stream_is_rejected" #.(lispify "lsquic_stream_is_rejected" 'function)) :int
  (s :pointer))

(cffi:defcfun ("lsquic_stream_refuse_push" #.(lispify "lsquic_stream_refuse_push" 'function)) :int
  (s :pointer))

(cffi:defcfun ("lsquic_stream_push_info" #.(lispify "lsquic_stream_push_info" 'function)) :int
  (arg0 :pointer)
  (ref_stream_id :pointer)
  (hdr_set :pointer))

(cffi:defcfun ("lsquic_stream_priority" #.(lispify "lsquic_stream_priority" 'function)) :unsigned-int
  (s :pointer))

(cffi:defcfun ("lsquic_stream_set_priority" #.(lispify "lsquic_stream_set_priority" 'function)) :int
  (s :pointer)
  (priority :unsigned-int))

(cffi:defcfun ("lsquic_stream_conn" #.(lispify "lsquic_stream_conn" 'function)) :pointer
  (s :pointer))

(cffi:defcfun ("lsquic_conn_id" #.(lispify "lsquic_conn_id" 'function)) :pointer
  (c :pointer))

(cffi:defcfun ("lsquic_conn_get_engine" #.(lispify "lsquic_conn_get_engine" 'function)) :pointer
  (c :pointer))

(cffi:defcfun ("lsquic_conn_get_sockaddr" #.(lispify "lsquic_conn_get_sockaddr" 'function)) :int
  (c :pointer)
  (local :pointer)
  (peer :pointer))

(cffi:defcstruct #.(lispify "lsquic_logger_if" 'classname)
	(#.(lispify "log_buf" 'slotname) :pointer))

(cffi:defcenum #.(lispify "lsquic_logger_timestamp_style" 'enumname)
	#.(lispify "LLTS_NONE" 'enumvalue :keyword)
	#.(lispify "LLTS_HHMMSSMS" 'enumvalue :keyword)
	#.(lispify "LLTS_YYYYMMDD_HHMMSSMS" 'enumvalue :keyword)
	#.(lispify "LLTS_CHROMELIKE" 'enumvalue :keyword)
	#.(lispify "LLTS_HHMMSSUS" 'enumvalue :keyword)
	#.(lispify "LLTS_YYYYMMDD_HHMMSSUS" 'enumvalue :keyword)
	#.(lispify "N_LLTS" 'enumvalue :keyword))

(cffi:defcfun ("lsquic_logger_init" #.(lispify "lsquic_logger_init" 'function)) :void
  (arg0 :pointer)
  (logger_ctx :pointer)
  (arg2 #.(lispify "lsquic_logger_timestamp_style" 'enumname)))

(cffi:defcfun ("lsquic_set_log_level" #.(lispify "lsquic_set_log_level" 'function)) :int
  (log_level :string))

(cffi:defcfun ("lsquic_logger_lopt" #.(lispify "lsquic_logger_lopt" 'function)) :int
  (optarg :string))

(cffi:defcfun ("lsquic_engine_quic_versions" #.(lispify "lsquic_engine_quic_versions" 'function)) :unsigned-int
  (arg0 :pointer))

(cl:defconstant #.(lispify "LSQUIC_GLOBAL_CLIENT" 'constant) (cl:ash 1 0))

(cl:defconstant #.(lispify "LSQUIC_GLOBAL_SERVER" 'constant) (cl:ash 1 1))

(cffi:defcfun ("lsquic_global_init" #.(lispify "lsquic_global_init" 'function)) :int
  (flags :int))

(cffi:defcfun ("lsquic_global_cleanup" #.(lispify "lsquic_global_cleanup" 'function)) :void)

(cffi:defcfun ("lsquic_conn_quic_version" #.(lispify "lsquic_conn_quic_version" 'function)) #.(lispify "lsquic_version" 'enumname)
  (c :pointer))

(cffi:defcfun ("lsquic_conn_crypto_keysize" #.(lispify "lsquic_conn_crypto_keysize" 'function)) :int
  (c :pointer))

(cffi:defcfun ("lsquic_conn_crypto_alg_keysize" #.(lispify "lsquic_conn_crypto_alg_keysize" 'function)) :int
  (c :pointer))

(cffi:defcenum #.(lispify "lsquic_crypto_ver" 'enumname)
	#.(lispify "LSQ_CRY_QUIC" 'enumvalue :keyword)
	#.(lispify "LSQ_CRY_TLSv13" 'enumvalue :keyword))

(cffi:defcfun ("lsquic_conn_crypto_ver" #.(lispify "lsquic_conn_crypto_ver" 'function)) #.(lispify "lsquic_crypto_ver" 'enumname)
  (c :pointer))

(cffi:defcfun ("lsquic_conn_crypto_cipher" #.(lispify "lsquic_conn_crypto_cipher" 'function)) :string
  (c :pointer))

(cffi:defcfun ("lsquic_str2ver" #.(lispify "lsquic_str2ver" 'function)) #.(lispify "lsquic_version" 'enumname)
  (str :string)
  (len :pointer))

(cffi:defcfun ("lsquic_alpn2ver" #.(lispify "lsquic_alpn2ver" 'function)) #.(lispify "lsquic_version" 'enumname)
  (alpn :string)
  (len :pointer))

(cffi:defcfun ("lsquic_engine_cooldown" #.(lispify "lsquic_engine_cooldown" 'function)) :void
  (arg0 :pointer))

(cffi:defcfun ("lsquic_conn_get_ctx" #.(lispify "lsquic_conn_get_ctx" 'function)) :pointer
  (arg0 :pointer))

(cffi:defcfun ("lsquic_conn_set_ctx" #.(lispify "lsquic_conn_set_ctx" 'function)) :void
  (arg0 :pointer)
  (arg1 :pointer))

(cffi:defcfun ("lsquic_conn_get_peer_ctx" #.(lispify "lsquic_conn_get_peer_ctx" 'function)) :pointer
  (arg0 :pointer)
  (local_sa :pointer))

(cffi:defcfun ("lsquic_conn_abort" #.(lispify "lsquic_conn_abort" 'function)) :void
  (arg0 :pointer))

(cffi:defcfun ("lsquic_get_alt_svc_versions" #.(lispify "lsquic_get_alt_svc_versions" 'function)) :string
  (versions :unsigned-int))

(cffi:defcfun ("lsquic_get_h3_alpns" #.(lispify "lsquic_get_h3_alpns" 'function)) :pointer
  (versions :unsigned-int))

(cffi:defcfun ("lsquic_is_valid_hs_packet" #.(lispify "lsquic_is_valid_hs_packet" 'function)) :int
  (arg0 :pointer)
  (arg1 :pointer)
  (arg2 :pointer))

(cffi:defcfun ("lsquic_cid_from_packet" #.(lispify "lsquic_cid_from_packet" 'function)) :int
  (arg0 :pointer)
  (bufsz :pointer)
  (cid :pointer))

(cffi:defcfun ("lsquic_engine_earliest_adv_tick" #.(lispify "lsquic_engine_earliest_adv_tick" 'function)) :int
  (engine :pointer)
  (diff :pointer))

(cffi:defcfun ("lsquic_engine_count_attq" #.(lispify "lsquic_engine_count_attq" 'function)) :unsigned-int
  (engine :pointer)
  (from_now :int))

(cffi:defcenum #.(lispify "LSQUIC_CONN_STATUS" 'enumname)
	#.(lispify "LSCONN_ST_HSK_IN_PROGRESS" 'enumvalue :keyword)
	#.(lispify "LSCONN_ST_CONNECTED" 'enumvalue :keyword)
	#.(lispify "LSCONN_ST_HSK_FAILURE" 'enumvalue :keyword)
	#.(lispify "LSCONN_ST_GOING_AWAY" 'enumvalue :keyword)
	#.(lispify "LSCONN_ST_TIMED_OUT" 'enumvalue :keyword)
	#.(lispify "LSCONN_ST_RESET" 'enumvalue :keyword)
	#.(lispify "LSCONN_ST_USER_ABORTED" 'enumvalue :keyword)
	#.(lispify "LSCONN_ST_ERROR" 'enumvalue :keyword)
	#.(lispify "LSCONN_ST_CLOSED" 'enumvalue :keyword)
	#.(lispify "LSCONN_ST_PEER_GOING_AWAY" 'enumvalue :keyword))

(cffi:defcfun ("lsquic_conn_status" #.(lispify "lsquic_conn_status" 'function)) #.(lispify "LSQUIC_CONN_STATUS" 'enumname)
  (arg0 :pointer)
  (errbuf :string)
  (bufsz :pointer))

(cffi:defcvar ("lsquic_ver2str" #.(lispify "lsquic_ver2str" 'variable))
 :pointer)

(cffi:defcenum #.(lispify "lsxpack_flag" 'enumname)
	(#.(lispify "LSXPACK_HPACK_VAL_MATCHED" 'enumvalue :keyword) #.1)
	(#.(lispify "LSXPACK_QPACK_IDX" 'enumvalue :keyword) #.2)
	(#.(lispify "LSXPACK_APP_IDX" 'enumvalue :keyword) #.4)
	(#.(lispify "LSXPACK_NAME_HASH" 'enumvalue :keyword) #.8)
	(#.(lispify "LSXPACK_NAMEVAL_HASH" 'enumvalue :keyword) #.16)
	(#.(lispify "LSXPACK_VAL_MATCHED" 'enumvalue :keyword) #.32)
	(#.(lispify "LSXPACK_NEVER_INDEX" 'enumvalue :keyword) #.64))

(cffi:defcstruct #.(lispify "lsxpack_header" 'classname)
	(#.(lispify "buf" 'slotname) :string)
	(#.(lispify "name_hash" 'slotname) :pointer)
	(#.(lispify "nameval_hash" 'slotname) :pointer)
	(#.(lispify "name_offset" 'slotname) :pointer)
	(#.(lispify "name_len" 'slotname) :pointer)
	(#.(lispify "val_offset" 'slotname) :pointer)
	(#.(lispify "val_len" 'slotname) :pointer)
	(#.(lispify "chain_next_idx" 'slotname) :pointer)
	(#.(lispify "hpack_index" 'slotname) :pointer)
	(#.(lispify "qpack_index" 'slotname) :pointer)
	(#.(lispify "app_index" 'slotname) :pointer)
	(#.(lispify "flags" 'slotname) #.(lispify "lsxpack_flag" 'enumname))
	(#.(lispify "indexed_type" 'slotname) :pointer)
	(#.(lispify "dec_overhead" 'slotname) :pointer))

(cffi:defcfun ("lsxpack_header_set_idx" #.(lispify "lsxpack_header_set_idx" 'function)) :void
  (hdr :pointer)
  (hpack_idx :int)
  (val :string)
  (val_len :pointer))

(cffi:defcfun ("lsxpack_header_set_qpack_idx" #.(lispify "lsxpack_header_set_qpack_idx" 'function)) :void
  (hdr :pointer)
  (qpack_idx :int)
  (val :string)
  (val_len :pointer))

(cffi:defcfun ("lsxpack_header_set_offset" #.(lispify "lsxpack_header_set_offset" 'function)) :void
  (hdr :pointer)
  (buf :string)
  (name_offset :pointer)
  (name_len :pointer)
  (val_len :pointer))

(cffi:defcfun ("lsxpack_header_set_offset2" #.(lispify "lsxpack_header_set_offset2" 'function)) :void
  (hdr :pointer)
  (buf :string)
  (name_offset :pointer)
  (name_len :pointer)
  (val_offset :pointer)
  (val_len :pointer))

(cffi:defcfun ("lsxpack_header_prepare_decode" #.(lispify "lsxpack_header_prepare_decode" 'function)) :void
  (hdr :pointer)
  (out :string)
  (offset :pointer)
  (len :pointer))

(cffi:defcfun ("lsxpack_header_get_name" #.(lispify "lsxpack_header_get_name" 'function)) :string
  (hdr :pointer))

(cffi:defcfun ("lsxpack_header_get_value" #.(lispify "lsxpack_header_get_value" 'function)) :string
  (hdr :pointer))

(cffi:defcfun ("lsxpack_header_get_dec_size" #.(lispify "lsxpack_header_get_dec_size" 'function)) :pointer
  (hdr :pointer))

(cffi:defcfun ("lsxpack_header_mark_val_changed" #.(lispify "lsxpack_header_mark_val_changed" 'function)) :void
  (hdr :pointer))


